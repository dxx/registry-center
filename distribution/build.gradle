import groovy.text.SimpleTemplateEngine

plugins {
    id "application"
}

description = "Registration Distribution"

java {
    archivesBaseName = "registration-starter"
}

application {
    mainClassName = "io.registration.Starter"
}

dependencies {
    implementation(project(":server"))
}

// 使用自定义的启动脚本模板
tasks.withType(CreateStartScripts) {
    applicationName = "startup"

    def unixScriptFile = "script/UnixStartupScript.txt"
    def winScriptFile = "script/WinStartupScript.txt"
    assert project.file(unixScriptFile).exists()
    assert project.file(winScriptFile).exists()
    unixStartScriptGenerator.template = resources.text.fromFile(file(unixScriptFile))
    windowsStartScriptGenerator.template = resources.text.fromFile(file(winScriptFile))
}

// 创建停止脚本任务
task createShutdownScripts {
    // 脚本目录
    def scripts = file("$buildDir/scripts")
    doLast {
        if (!scripts.exists()) {
            scripts.mkdirs()
        }
        def binding = ["mainClassName": mainClassName]
        def unixEngine = new SimpleTemplateEngine()
        def unixTemplate = unixEngine.createTemplate(file("script/UnixShutdownScript.txt").getText()).make(binding)
        new File(scripts, "shutdown").write(unixTemplate.toString())

        def winEngine = new SimpleTemplateEngine()
        def winTemplate = winEngine.createTemplate(file("script/WinShutdownScript.txt").getText()).make(binding)
        new File(scripts, "shutdown.bat").write(winTemplate.toString())
    }
}

distributions {
    main {
        distributionBaseName = "registration-center"
        contents {
            // 复制配置文件
            from("conf") {
                into "conf"
            }
            // 触发停止脚本创建任务
            from(createShutdownScripts) {
                exclude "*"
            }
        }
    }
}
